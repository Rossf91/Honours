<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<title>EIA-Interface: inc/ise/eia/EiaInstruction.h Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<link href="doxygen.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<!-- Generated by Doxygen 1.7.1 -->
<div class="navigation" id="top">
  <div class="tabs">
    <ul class="tablist">
      <li><a href="main.html"><span>Main&nbsp;Page</span></a></li>
      <li><a href="annotated.html"><span>Classes</span></a></li>
      <li class="current"><a href="files.html"><span>Files</span></a></li>
    </ul>
  </div>
  <div class="tabs2">
    <ul class="tablist">
      <li><a href="files.html"><span>File&nbsp;List</span></a></li>
    </ul>
  </div>
<div class="header">
  <div class="headertitle">
<h1>inc/ise/eia/EiaInstruction.h</h1>  </div>
</div>
<div class="contents">
<div class="fragment"><pre class="fragment"><a name="l00001"></a>00001 <span class="comment">//                          Copyright Notice</span>
<a name="l00002"></a>00002 <span class="comment">//</span>
<a name="l00003"></a>00003 <span class="comment">//    Certain materials incorporated herein are copyright (C) 2004 â€“ 2011, </span>
<a name="l00004"></a>00004 <span class="comment">//  The University Court of the University of Edinburgh. All Rights Reserved.</span>
<a name="l00005"></a>00005 <span class="comment">//</span>
<a name="l00006"></a>00006 <span class="comment">// =============================================================================</span>
<a name="l00007"></a>00007 
<a name="l00008"></a>00008 <span class="preprocessor">#ifndef _INC_ISE_EIA_EIAINSTRUCTION_H_</span>
<a name="l00009"></a>00009 <span class="preprocessor"></span><span class="preprocessor">#define _INC_ISE_EIA_EIAINSTRUCTION_H_</span>
<a name="l00010"></a>00010 <span class="preprocessor"></span>
<a name="l00011"></a>00011 <span class="preprocessor">#include &quot;ise/eia/EiaInstructionInterface.h&quot;</span>
<a name="l00012"></a>00012 
<a name="l00013"></a>00013 <span class="preprocessor">#include &quot;api/types.h&quot;</span>
<a name="l00014"></a>00014 <span class="preprocessor">#include &lt;string&gt;</span>
<a name="l00015"></a>00015 
<a name="l00016"></a>00016 
<a name="l00017"></a>00017 <span class="keyword">namespace </span>arcsim {
<a name="l00018"></a>00018   <span class="keyword">namespace </span>ise {
<a name="l00019"></a>00019     <span class="keyword">namespace </span>eia {
<a name="l00020"></a>00020 
<a name="l00021"></a>00021       <span class="comment">// Forward declare EiaExtension</span>
<a name="l00022"></a>00022       <span class="comment">//</span>
<a name="l00023"></a>00023       <span class="keyword">class </span>EiaExtension;
<a name="l00024"></a>00024       
<a name="l00025"></a>00025       
<a name="l00031"></a><a class="code" href="classarcsim_1_1ise_1_1eia_1_1_eia_instruction.html">00031</a>       <span class="keyword">class </span><a class="code" href="classarcsim_1_1ise_1_1eia_1_1_eia_instruction.html" title="EiaInstruction base class.">EiaInstruction</a> :
<a name="l00032"></a>00032         <span class="keyword">public</span> <a class="code" href="classarcsim_1_1ise_1_1eia_1_1_eia_instruction_interface.html" title="EiaInstructionInterface.">EiaInstructionInterface</a>
<a name="l00033"></a>00033       {
<a name="l00034"></a>00034       <span class="keyword">private</span>:
<a name="l00035"></a>00035         std::string                   name_;
<a name="l00036"></a>00036         uint32                        id_;
<a name="l00037"></a>00037         
<a name="l00038"></a>00038         <a class="code" href="classarcsim_1_1ise_1_1eia_1_1_eia_instruction_interface.html#af8ee289cfb3e659bb49501a489d63779" title="ExtensionInstruction Kinds.">EiaInstructionInterface::Kind</a> kind_;
<a name="l00039"></a>00039         
<a name="l00040"></a>00040         uint32                        opcode_major_;
<a name="l00041"></a>00041         uint32                        opcode_;
<a name="l00042"></a>00042         uint32                        cycles_;
<a name="l00043"></a>00043 
<a name="l00044"></a>00044         <span class="keywordtype">bool</span>                          has_dst_;
<a name="l00045"></a>00045         <span class="keywordtype">bool</span>                          is_blocking_;
<a name="l00046"></a>00046         <span class="keywordtype">bool</span>                          is_flag_setting_;
<a name="l00047"></a>00047 
<a name="l00048"></a>00048       <span class="keyword">protected</span>:
<a name="l00049"></a>00049         <span class="comment">// extension instructions may have direct access to state defined by their</span>
<a name="l00050"></a>00050         <span class="comment">// enclosing extension.</span>
<a name="l00051"></a>00051         <span class="comment">//</span>
<a name="l00052"></a>00052         <a class="code" href="classarcsim_1_1ise_1_1eia_1_1_eia_extension.html" title="EiaExtension base class.">EiaExtension</a>&amp; parent;
<a name="l00053"></a>00053         
<a name="l00054"></a>00054       <span class="keyword">public</span>:        
<a name="l00055"></a>00055 
<a name="l00056"></a>00056         <span class="comment">// Constructor/Destructor</span>
<a name="l00057"></a>00057         <span class="comment">//</span>
<a name="l00058"></a>00058         <span class="keyword">explicit</span> <a class="code" href="classarcsim_1_1ise_1_1eia_1_1_eia_instruction.html" title="EiaInstruction base class.">EiaInstruction</a>(<a class="code" href="classarcsim_1_1ise_1_1eia_1_1_eia_extension.html" title="EiaExtension base class.">EiaExtension</a>* _parent,
<a name="l00059"></a>00059                                 std::string   _name,
<a name="l00060"></a>00060                                 <a class="code" href="classarcsim_1_1ise_1_1eia_1_1_eia_instruction_interface.html#af8ee289cfb3e659bb49501a489d63779" title="ExtensionInstruction Kinds.">EiaInstructionInterface::Kind</a> _kind,
<a name="l00061"></a>00061                                 uint32  _opcode_major,
<a name="l00062"></a>00062                                 uint32  _opcode,
<a name="l00063"></a>00063                                 uint32  _cycles,
<a name="l00064"></a>00064                                 <span class="keywordtype">bool</span>    _has_dst,
<a name="l00065"></a>00065                                 <span class="keywordtype">bool</span>    _is_blocking,
<a name="l00066"></a>00066                                 <span class="keywordtype">bool</span>    _is_flag_setting);
<a name="l00067"></a>00067         ~<a class="code" href="classarcsim_1_1ise_1_1eia_1_1_eia_instruction.html" title="EiaInstruction base class.">EiaInstruction</a>();
<a name="l00068"></a>00068         
<a name="l00069"></a>00069         
<a name="l00070"></a>00070         <span class="comment">// Interface methods ---------------------------------------------------</span>
<a name="l00071"></a>00071         <span class="comment">//</span>
<a name="l00072"></a>00072         
<a name="l00073"></a><a class="code" href="classarcsim_1_1ise_1_1eia_1_1_eia_instruction.html#aeb7d6e38a63f153dd2dd17ecaf382d0f">00073</a>         <span class="keyword">const</span> <span class="keywordtype">char</span>*   <a class="code" href="classarcsim_1_1ise_1_1eia_1_1_eia_instruction.html#aeb7d6e38a63f153dd2dd17ecaf382d0f" title="Get name of EiaInstruction.">get_name</a>()<span class="keyword"> const  </span>{ <span class="keywordflow">return</span> name_.c_str(); }
<a name="l00074"></a><a class="code" href="classarcsim_1_1ise_1_1eia_1_1_eia_instruction.html#ad4caf3006dac3a09ac217f2ec2102624">00074</a>         <span class="keyword">const</span> uint32  <a class="code" href="classarcsim_1_1ise_1_1eia_1_1_eia_instruction.html#ad4caf3006dac3a09ac217f2ec2102624" title="Get identity of the owning EiaExtension.">get_id</a>()          { <span class="keywordflow">return</span> id_;           }
<a name="l00075"></a><a class="code" href="classarcsim_1_1ise_1_1eia_1_1_eia_instruction.html#acfc32eda1e08588527a0eeeb2e0ea825">00075</a>         <a class="code" href="classarcsim_1_1ise_1_1eia_1_1_eia_instruction_interface.html#af8ee289cfb3e659bb49501a489d63779" title="ExtensionInstruction Kinds.">Kind</a>          <a class="code" href="classarcsim_1_1ise_1_1eia_1_1_eia_instruction.html#acfc32eda1e08588527a0eeeb2e0ea825" title="Get kind of EiaInstruction.">get_kind</a>()<span class="keyword"> const  </span>{ <span class="keywordflow">return</span> kind_;         }
<a name="l00076"></a><a class="code" href="classarcsim_1_1ise_1_1eia_1_1_eia_instruction.html#a3c13358529af0c9469debb42c550a2ee">00076</a>         uint32        <a class="code" href="classarcsim_1_1ise_1_1eia_1_1_eia_instruction.html#a3c13358529af0c9469debb42c550a2ee" title="Get requested instruction opcode.">get_opcode</a>(<a class="code" href="classarcsim_1_1ise_1_1eia_1_1_eia_instruction_interface.html#a793201ea589de252e117c568b0d2a2cb" title="OpcodeType Kinds.">OpcodeType</a> opc_type)<span class="keyword"> const </span>{
<a name="l00077"></a>00077           <span class="keywordflow">switch</span> (opc_type) {
<a name="l00078"></a>00078             <span class="keywordflow">case</span> <a class="code" href="classarcsim_1_1ise_1_1eia_1_1_eia_instruction_interface.html#a793201ea589de252e117c568b0d2a2cbaabd74a79e111f75d3bec5f910ef17042" title="OPCODE_MAJOR - major instruction opcode.">EiaInstructionInterface::OPCODE_MAJOR</a>: <span class="keywordflow">return</span> opcode_major_;
<a name="l00079"></a>00079             <span class="keywordflow">case</span> <a class="code" href="classarcsim_1_1ise_1_1eia_1_1_eia_instruction_interface.html#a793201ea589de252e117c568b0d2a2cba2b1c4085e55b134097b27858cba2e589" title="OPCODE - instruction opcode.">EiaInstructionInterface::OPCODE</a>:       <span class="keywordflow">return</span> opcode_;
<a name="l00080"></a>00080           }
<a name="l00081"></a>00081         }
<a name="l00082"></a>00082         
<a name="l00083"></a><a class="code" href="classarcsim_1_1ise_1_1eia_1_1_eia_instruction.html#abe45922cf8453dcaa34704c0e4c12201">00083</a>         uint32        <a class="code" href="classarcsim_1_1ise_1_1eia_1_1_eia_instruction.html#abe45922cf8453dcaa34704c0e4c12201" title="Get instruction latency in cycles.">get_cycles</a>()      { <span class="keywordflow">return</span> cycles_;           }
<a name="l00084"></a><a class="code" href="classarcsim_1_1ise_1_1eia_1_1_eia_instruction.html#a74195b2274b29a767d70b719ecaa1676">00084</a>         <span class="keywordtype">bool</span>          <a class="code" href="classarcsim_1_1ise_1_1eia_1_1_eia_instruction.html#a74195b2274b29a767d70b719ecaa1676" title="Does the instruction have a destination.">has_dest</a>()        { <span class="keywordflow">return</span> has_dst_;          }
<a name="l00085"></a><a class="code" href="classarcsim_1_1ise_1_1eia_1_1_eia_instruction.html#aa178594019268097fce176863704d464">00085</a>         <span class="keywordtype">bool</span>          <a class="code" href="classarcsim_1_1ise_1_1eia_1_1_eia_instruction.html#aa178594019268097fce176863704d464" title="Is the instruction blocking.">is_blocking</a>()     { <span class="keywordflow">return</span> is_blocking_;      }
<a name="l00086"></a><a class="code" href="classarcsim_1_1ise_1_1eia_1_1_eia_instruction.html#aa2bc5d62ca01ad764c99ae1655426404">00086</a>         <span class="keywordtype">bool</span>          <a class="code" href="classarcsim_1_1ise_1_1eia_1_1_eia_instruction.html#aa2bc5d62ca01ad764c99ae1655426404" title="Is the instruction flag setting.">is_flag_setting</a>() { <span class="keywordflow">return</span> is_flag_setting_;  }
<a name="l00087"></a>00087 
<a name="l00088"></a>00088         
<a name="l00089"></a>00089         uint32 <a class="code" href="classarcsim_1_1ise_1_1eia_1_1_eia_instruction.html#a98926fa69e2a8e0cde5be7e7bfdac699" title="This method is called for NON flag setting ZERO_OPD instruction kinds.">eval_zero_opd</a> (<a class="code" href="structarcsim_1_1ise_1_1eia_1_1_eia_bflags.html" title="EiaBflags structure.">EiaBflags</a> bflags_in,
<a name="l00090"></a>00090                               <a class="code" href="structarcsim_1_1ise_1_1eia_1_1_eia_xflags.html" title="EiaXflags structure.">EiaXflags</a> xflags_in);
<a name="l00091"></a>00091         
<a name="l00092"></a>00092         uint32 <a class="code" href="classarcsim_1_1ise_1_1eia_1_1_eia_instruction.html#a98926fa69e2a8e0cde5be7e7bfdac699" title="This method is called for NON flag setting ZERO_OPD instruction kinds.">eval_zero_opd</a> (<a class="code" href="structarcsim_1_1ise_1_1eia_1_1_eia_bflags.html" title="EiaBflags structure.">EiaBflags</a>  blags_in,                              
<a name="l00093"></a>00093                               <a class="code" href="structarcsim_1_1ise_1_1eia_1_1_eia_xflags.html" title="EiaXflags structure.">EiaXflags</a>  xflags_in,
<a name="l00094"></a>00094                               <a class="code" href="structarcsim_1_1ise_1_1eia_1_1_eia_bflags.html" title="EiaBflags structure.">EiaBflags</a>* bflags_out,
<a name="l00095"></a>00095                               <a class="code" href="structarcsim_1_1ise_1_1eia_1_1_eia_xflags.html" title="EiaXflags structure.">EiaXflags</a>* xflags_out);
<a name="l00096"></a>00096         
<a name="l00097"></a>00097         uint32 <a class="code" href="classarcsim_1_1ise_1_1eia_1_1_eia_instruction.html#a6e72b1770b98c2a6629aadbbe6ef4bc6" title="This method is called for NON flag setting SINGLE_OPD instruction kinds.">eval_single_opd</a> (uint32    src1,
<a name="l00098"></a>00098                                 <a class="code" href="structarcsim_1_1ise_1_1eia_1_1_eia_bflags.html" title="EiaBflags structure.">EiaBflags</a> bflags_in,
<a name="l00099"></a>00099                                 <a class="code" href="structarcsim_1_1ise_1_1eia_1_1_eia_xflags.html" title="EiaXflags structure.">EiaXflags</a> xflags_in);
<a name="l00100"></a>00100         
<a name="l00101"></a>00101         uint32 <a class="code" href="classarcsim_1_1ise_1_1eia_1_1_eia_instruction.html#a6e72b1770b98c2a6629aadbbe6ef4bc6" title="This method is called for NON flag setting SINGLE_OPD instruction kinds.">eval_single_opd</a> (uint32     src1 ,
<a name="l00102"></a>00102                                 <a class="code" href="structarcsim_1_1ise_1_1eia_1_1_eia_bflags.html" title="EiaBflags structure.">EiaBflags</a>  bflags_in,
<a name="l00103"></a>00103                                 <a class="code" href="structarcsim_1_1ise_1_1eia_1_1_eia_xflags.html" title="EiaXflags structure.">EiaXflags</a>  xflags_in,
<a name="l00104"></a>00104                                 <a class="code" href="structarcsim_1_1ise_1_1eia_1_1_eia_bflags.html" title="EiaBflags structure.">EiaBflags</a>* bflags_out,
<a name="l00105"></a>00105                                 <a class="code" href="structarcsim_1_1ise_1_1eia_1_1_eia_xflags.html" title="EiaXflags structure.">EiaXflags</a>* xflags_out);
<a name="l00106"></a>00106         
<a name="l00107"></a>00107         uint32 <a class="code" href="classarcsim_1_1ise_1_1eia_1_1_eia_instruction.html#a837e61adc7aedfd817ae5cc09cadddd1" title="This method is called for NON flag setting DUAL_OPD instruction kinds.">eval_dual_opd</a> (uint32    src1,
<a name="l00108"></a>00108                               uint32    src2,
<a name="l00109"></a>00109                               <a class="code" href="structarcsim_1_1ise_1_1eia_1_1_eia_bflags.html" title="EiaBflags structure.">EiaBflags</a> bflags_in,
<a name="l00110"></a>00110                               <a class="code" href="structarcsim_1_1ise_1_1eia_1_1_eia_xflags.html" title="EiaXflags structure.">EiaXflags</a> xflags_in);
<a name="l00111"></a>00111         
<a name="l00112"></a>00112         uint32 <a class="code" href="classarcsim_1_1ise_1_1eia_1_1_eia_instruction.html#a837e61adc7aedfd817ae5cc09cadddd1" title="This method is called for NON flag setting DUAL_OPD instruction kinds.">eval_dual_opd</a> (uint32     src1,
<a name="l00113"></a>00113                               uint32     src2,
<a name="l00114"></a>00114                               <a class="code" href="structarcsim_1_1ise_1_1eia_1_1_eia_bflags.html" title="EiaBflags structure.">EiaBflags</a>  bflags_in,
<a name="l00115"></a>00115                               <a class="code" href="structarcsim_1_1ise_1_1eia_1_1_eia_xflags.html" title="EiaXflags structure.">EiaXflags</a>  xflags_in,
<a name="l00116"></a>00116                               <a class="code" href="structarcsim_1_1ise_1_1eia_1_1_eia_bflags.html" title="EiaBflags structure.">EiaBflags</a>* bflags_out,
<a name="l00117"></a>00117                               <a class="code" href="structarcsim_1_1ise_1_1eia_1_1_eia_xflags.html" title="EiaXflags structure.">EiaXflags</a>* xflags_out);
<a name="l00118"></a>00118         
<a name="l00119"></a>00119       };
<a name="l00120"></a>00120       
<a name="l00121"></a>00121 } } } <span class="comment">//  arcsim::ise::eia</span>
<a name="l00122"></a>00122 
<a name="l00123"></a>00123 <span class="preprocessor">#endif  // _INC_ISE_EIA_EIAINSTRUCTION_H_</span>
</pre></div></div>
</div>
<hr class="footer"/><address class="footer"><small>Generated by&nbsp;
<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.7.1 </small></address>
</body>
</html>
